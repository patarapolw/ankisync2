#! /usr/bin/env python3
# -*- coding: utf-8 -*-

# statistic-actions.py : implementation of the Statistic Actions
# Author: sosie <sosie@sos-productions.com> (08.2021)
# Note: this is a direct copy, autogenerated from the fixed API docs found on FooSoft productions website
# using Aná´µkisync2_api.py script. Some examples may not work
# due to the missing test database collections.anki2 in the current user anki directory
# See : https://foosoft.net/projects/anki-connect/#statistic-actions
#
#sudo pip3 install ankisync2
import os

from ankisync2.ankiconnect import  ankiconnect as invoke

        """====================================Gets the count of cards that have been reviewed in the current day (with day start time as configured by user in anki)===================================="""result = invoke("getNumCardsReviewedToday")#Example of result: { "result" : 0 , "error" : null }"""====================================Gets the number of cards reviewed as a list of pairs of (dateString, number)===================================="""result = invoke("getNumCardsReviewedByDay")#Example of result: { "result" :  [         [ "2021-02-28" , 124 ],         [ "2021-02-27" , 261 ]     ], "error" : null }"""====================================Gets the collection statistics report===================================="""wholeCollection=trueresult = invoke("getCollectionStatsHTML", wholeCollection=wholeCollection)#Example of result: { "error" : null , "result" : "<center> lots of HTML here </center>" }"""====================================Requests all card reviews for a specified deck after a certain time. startID is the latest unix time not included in the result. Returns a list of 9-tuples (reviewTime, cardID, usn, buttonPressed, newInterval, previousInterval, newFactor, reviewDuration, reviewType)===================================="""deck="default"startID=1594194095740result = invoke("cardReviews", deck=deck, startID=startID)#Example of result: { "result" : [         [ 1594194095746 , 1485369733217 , -1 , 3 , 4 , -60 , 2500 , 6157 , 0 ],         [ 1594201393292 , 1485369902086 , -1 , 1 , -60 , -60 , 0 , 4846 , 0 ]     ], "error" : null }"""====================================Returns the unix time of the latest review for the given deck. 0 if no review has ever been made for the deck.===================================="""deck="default"result = invoke("getLatestReviewID", deck=deck)#Example of result: { "result" : 1594194095746 , "error" : null }"""====================================Inserts the given reviews into the database. Required format: list of 9-tuples (reviewTime, cardID, usn, buttonPressed, newInterval, previousInterval, newFactor, reviewDuration, reviewType)===================================="""reviews=[
    [
        1594194095746,
        1485369733217,
        -1,
        3,
        4,
        -60,
        2500,
        6157,
        0
    ],
    [
        1594201393292,
        1485369902086,
        -1,
        1,
        -60,
        -60,
        0,
        4846,
        0
    ]
]result = invoke("insertReviews", reviews=reviews)#Example of result: { "result" : null , "error" : null }